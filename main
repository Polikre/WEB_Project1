import logging
import datetime
from telegram.ext import Application, MessageHandler, ConversationHandler, filters
from telegram.ext import CommandHandler
from telegram import ReplyKeyboardMarkup
from random import randint

# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

name = ""
spis_facult = ["1", "2", "3"]
spis_vyz = ["–ú–ì–£", "–ú–§–¢–ò", "–ú–ò–§–ò", "–í–®–≠"]
spis_need_olymp = ["–í—Å–µ—Ä–æ—Å"]
spis_olymp = ["–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∞—è –æ–ª–∏–º–ø–∏–∞–¥–∞ —à–∫–æ–ª—å–Ω–∏–∫–æ–≤"]
reply_keyboard_MAIN = [['/spic_VYZ', '/spic_olymp', '/info'],
                       ['/add_olymp', '/add_VYZ', '/change_delta'],
                       ['/help', '/info', '/stop']]


markup1 = ReplyKeyboardMarkup(reply_keyboard_MAIN, one_time_keyboard=False)


async def start(update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start"""
    user = update.effective_user
    user = update.effective_user
    await update.message.reply_html(
        rf"""–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –í–£–ó –≤ –ú–æ—Å–∫–≤–µ. –ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –ø–∞–Ω–µ–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ: 
            1) –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –í–£–ó–∞—Ö –ú–æ—Å–∫–≤—ã
            2) –í—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –∏ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã 
                –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–µ–≥–æ
            3) –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–∏—á–Ω—ã–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –æ–ª–∏–º–ø–∏–∞–¥""", reply_markup=markup1)


async def _help_(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf"""–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ–∂–µ—Ç –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –í–£–ó –≤ –ú–æ—Å–∫–≤–µ. –ò—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—ã –Ω–∞ –ø–∞–Ω–µ–ª–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ: 
        1) –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ –í–£–ó–∞—Ö –ú–æ—Å–∫–≤—ã
        2) –í—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –∏ —Å—Ç—Ä–µ–º–∏—Ç—å—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã 
            –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–µ–≥–æ
        3) –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–∏—á–Ω—ã–º–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –æ–ª–∏–º–ø–∏–∞–¥""", reply_markup=markup1)


async def help_CHANGE(update, context):
    await update.message.reply_html(
        rf"""üìö –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≤—É–∑: /set_VYZ

        –ü–æ–º–Ω–∏—Ç–µ - –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä –º–æ–∂–Ω–æ –≤—Å–µ–≥–¥–∞!

        –¢–∞–∫–∂–µ –º—ã —Å–æ–±—Ä–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –í–£–ó–æ–≤ –ú–æ—Å–∫–≤—ã,
         –∫–æ—Ç–æ—Ä—ã–π –í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /spic_VYZ! üéì""")


async def help_SPIC(update, context):
    await update.message.reply_html(
        rf"""üè´ –ü–æ –∫–æ–º–∞–Ω–¥–µ /spic_VYZ –í—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –í–£–ó–æ–≤ –ú–æ—Å–∫–≤—ã, –≤ –±—É–¥—É—â–µ–º —ç—Ç–æ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–æ–¥–∏—Ç—å—Å—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –Ω–∏—Ö.

üë®‚Äçüéì –ê –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ /spic_OLYMP –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥""")


async def help_INF(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf'''üö© {user.mention_html()},—ç—Ç–æ –í–∞—à–µ –ª–∏—á–Ω–æ–µ –õ–æ–±–±–∏, –≥–¥–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –æ –ª–∏—á–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö, –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≤—É–∑–µ, –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ–π –Ω–∏–∫ –∏ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –º–µ–∂–¥—É "–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞–º–∏"''')


async def help_SET(update, context):
    user = update.effective_user
    await update.message.reply_html(
        rf'''‚åõ –ö–æ–º–∞–Ω–¥—ã /set_OLYMP –∏ /change_DELTA

–ü–æ–º–æ–≥–∞—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ –≤—ã–±—Ä–∞—Ç—å –≤–Ω–µ—É—Ä–æ—á–Ω—É—é –æ–ª–∏–º–ø–∏–∞–¥—É –∏ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –Ω–µ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –∞ —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –º–µ–∂–¥—É "–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞–º–∏"''')


async def stop(update, context):
    await update.message.reply_html("–¢—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É stop, –ø–æ–ª—å–∑—É–π—Å—è –ª—é–±—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏!")


async def _main_(update, context):
    pass


async def set_OLYMP(update, context):
    pass


async def set_VYZ(update, context):
    pass

# --------------------------------------------------------------------------------------------------


async def add_OLYMP(update, context):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –æ–ª–∏–º–ø–∏–∞–¥—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å")
    return 1


async def add_OLYMP_2(update, context):
    olymp = update.message.text
    if olymp in spis_olymp:
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—É–∑–∞ –≤ –ë–î
        if olymp not in spis_need_olymp:
            await update.message.reply_text(
                "–î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–ª–∏–º–ø–∏–∞–¥–∞, –Ω–µ –≤–ª–∏—è—é—â–∞—è –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π –≤—É–∑. –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ—ë, –Ω–∞–∂–º–∏ /del_OLYMP, —á—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –Ω–∞–∂–º–∏ /change_DELTA")
        else:
            await update.message.reply_text("–î–æ–±–∞–≤–ª–µ–Ω–∞ –Ω—É–∂–Ω–∞—è —Ç–µ–±–µ –æ–ª–∏–º–ø–∏–∞–¥–∞. –ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –µ—ë, –Ω–∞–∂–º–∏ /del_OLYMP, —á—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –Ω–∞–∂–º–∏ /change_DELTA")
        return ConversationHandler.END
    else:
        await update.message.reply_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–æ—Ç –Ω–µ –∑–Ω–∞–µ—Ç –æ —Ç–∞–∫–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ. –ü–æ—Å–º–æ—Ç—Ä–∏ —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥, –Ω–∞–∂–∞–≤ /spis_OLYMP")
        return ConversationHandler.END

# ------------------------------------------------------------------------------


async def del_OLYMP(update, context):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –æ–ª–∏–º–ø–∏–∞–¥—É, –∫–æ—Ç–æ—Ä—É—é –•–û–ß–ï–®–¨ –£–î–ê–õ–ò–¢–¨")
    return 1


async def del_OLYMP_2(update, context):
    olymp = update.message.text
    if olymp in spis_olymp:
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—É–∑–∞ –≤ –ë–î
        if olymp not in spis_need_olymp:
            await update.message.reply_text(
                "–£–¥–∞–ª–µ–Ω–∞ –æ–ª–∏–º–ø–∏–∞–¥–∞, –Ω–µ –≤–ª–∏—è—é—â–∞—è –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π –≤—É–∑. –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ—ë, –Ω–∞–∂–º–∏ /add_OLYMP")
        else:
            await update.message.reply_text("–£–¥–∞–ª–µ–Ω–∞ –Ω—É–∂–Ω–∞—è —Ç–µ–±–µ –æ–ª–∏–º–ø–∏–∞–¥–∞. –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –µ—ë, –Ω–∞–∂–º–∏ /add_OLYMP, —á—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –Ω–∞–∂–º–∏ /change_DELTA")
        return ConversationHandler.END
    else:
        await update.message.reply_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–æ—Ç –Ω–µ –∑–Ω–∞–µ—Ç –æ —Ç–∞–∫–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ. –ü–æ—Å–º–æ—Ç—Ä–∏ —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥, –Ω–∞–∂–∞–≤ /spis_OLYMP")
        return ConversationHandler.END

# ---------------------------------------------------------


async def add_VYZ(update, context):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –≤—É–∑, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—É–ø–∏—Ç—å")
    return 1


async def add_VYZ_2(update, context):
    vyz = update.message.text
    if vyz in spis_vyz:
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—É–∑–∞ –≤ –ë–î
        await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –¢—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ–∞–∫—É–ª—å—Ç–µ—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—É–ø–∏—Ç—å, –∏–ª–∏ –Ω–∞–∂–∞—Ç—å /stop")
        return 2

    else:
        await update.message.reply_text("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–æ—Ç –Ω–µ –∑–Ω–∞–µ—Ç –æ —Ç–∞–∫–æ–º –≤—É–∑–µ. –ü–æ—Å–º–æ—Ç—Ä–∏ —Å–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –Ω–∞–∂–∞–≤ –Ω–∞ /spic_VYZ. ")
        return ConversationHandler.END


async def add_VYZ_3(update, context):
    vyz = update.message.text
    if vyz in spis_facult:
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –≤ –ë–î
        await update.message.reply_text("–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–ª–∏–º–ø–∏–∞–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤, –Ω–∞–∂–∞–≤ /spis_need_olymp")
        return ConversationHandler.END

    else:
        await update.message.reply_text(
            "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞—à –±–æ—Ç –Ω–µ –∑–Ω–∞–µ—Ç –æ —Ç–∞–∫–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ. –í–≤–µ–¥–∏ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–∂–º–∏ /stop")
        return 2


# --------------------------------------------------------------

async def change_DELTA(update, context):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–ª–∏–º–ø–∏–∞–¥—ã, –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ –∏ –≤—Ä–µ–º—è, –≤ –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ –Ω–µ–π –Ω–∞–ø–æ–º–Ω–∏—Ç—å")
    return 1


async def change_DELTA_2(update, context):
    # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –≤ –ë–î
    await update.message.reply_text("–ë–æ—Ç –Ω–∞–ø–æ–º–Ω–∏—Ç –æ–± —ç—Ç–æ–π –æ–ª–∏–º–ø–∏–∞–¥–µ!")
    return ConversationHandler.END


# -------------------------------------------

async def spic_VYZ(update, context):
    await update.message.reply_text("–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—É–∑–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ:\n" + "\n".join(spis_vyz))


async def spic_OLYMP(update, context):
    await update.message.reply_text("–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ–ª–∏–º–ø–∏–∞–¥, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –Ω–∞—à–µ–π –±–∞–∑–µ:\n" + "\n".join(spis_olymp))


async def spic_need_OLYMP(update, context):
    await update.message.reply_text("–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –æ–ª–∏–º–ø–∏–∞–¥ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π –≤—É–∑–æ–≤/—Ñ–∞–∫—É–ª—å—Ç–µ—Ç–æ–≤:\n" + "\n".join(spis_need_olymp))


async def info(update, context):
    pass


def main():
    application = Application.builder().token("6088085766:AAE-IHzfawY9uGDaldMeIw_JCtrsCBPJZaM").build()
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
    application.add_handler(CommandHandler("help", _help_))
    application.add_handler(CommandHandler("help_CHANGE", help_CHANGE))
    application.add_handler(CommandHandler("help_SPIC", help_SPIC))
    application.add_handler(CommandHandler("help_INF", help_INF))
    application.add_handler(CommandHandler("help_SET", help_SET))

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("stop", stop))
    application.add_handler(CommandHandler("main", _main_))

    application.add_handler(CommandHandler("set_OLYMP", set_OLYMP))
    application.add_handler(CommandHandler("set_VYZ", set_VYZ))

    application.add_handler(CommandHandler("change_DELTA", change_DELTA))

    application.add_handler(CommandHandler("spic_VYZ", spic_VYZ))
    application.add_handler(CommandHandler("spic_OLYMP", spic_OLYMP))

    application.add_handler(CommandHandler("info", info))

    conv1 = ConversationHandler(
        entry_points=[CommandHandler('change_DELTA', change_DELTA)],
        states={
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, change_DELTA_2)]
        },
        fallbacks=[CommandHandler('stop', stop)]
    )
    application.add_handler(conv1)

    conv2 = ConversationHandler(
        entry_points=[CommandHandler('add_VYZ', add_VYZ)],
        states={
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, add_VYZ_2)],
            2: [MessageHandler(filters.TEXT & ~filters.COMMAND, add_VYZ_3)]
        },
        fallbacks=[CommandHandler('stop', stop)]
    )
    application.add_handler(conv2)

    conv3 = ConversationHandler(
        entry_points=[CommandHandler('del_OLYMP', del_OLYMP)],
        states={
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, del_OLYMP_2)],
        },
        fallbacks=[CommandHandler('stop', stop)]
    )
    application.add_handler(conv3)

    conv4 = ConversationHandler(
        entry_points=[CommandHandler('add_OLYMP', add_OLYMP)],
        states={
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, add_OLYMP_2)],
        },
        fallbacks=[CommandHandler('stop', stop)]
    )

    application.add_handler(conv4)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é main() –≤ —Å–ª—É—á–∞–µ –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞.
if __name__ == '__main__':
    main()
